// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	domain "github.com/jperdior/chatbot-kit/domain"
	mock "github.com/stretchr/testify/mock"
)

// CriteriaInterface is an autogenerated mock type for the CriteriaInterface type
type CriteriaInterface struct {
	mock.Mock
}

type CriteriaInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *CriteriaInterface) EXPECT() *CriteriaInterface_Expecter {
	return &CriteriaInterface_Expecter{mock: &_m.Mock}
}

// Filters provides a mock function with given fields:
func (_m *CriteriaInterface) Filters() []domain.FilterInterface {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Filters")
	}

	var r0 []domain.FilterInterface
	if rf, ok := ret.Get(0).(func() []domain.FilterInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.FilterInterface)
		}
	}

	return r0
}

// CriteriaInterface_Filters_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Filters'
type CriteriaInterface_Filters_Call struct {
	*mock.Call
}

// Filters is a helper method to define mock.On call
func (_e *CriteriaInterface_Expecter) Filters() *CriteriaInterface_Filters_Call {
	return &CriteriaInterface_Filters_Call{Call: _e.mock.On("Filters")}
}

func (_c *CriteriaInterface_Filters_Call) Run(run func()) *CriteriaInterface_Filters_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *CriteriaInterface_Filters_Call) Return(_a0 []domain.FilterInterface) *CriteriaInterface_Filters_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CriteriaInterface_Filters_Call) RunAndReturn(run func() []domain.FilterInterface) *CriteriaInterface_Filters_Call {
	_c.Call.Return(run)
	return _c
}

// Page provides a mock function with given fields:
func (_m *CriteriaInterface) Page() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Page")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// CriteriaInterface_Page_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Page'
type CriteriaInterface_Page_Call struct {
	*mock.Call
}

// Page is a helper method to define mock.On call
func (_e *CriteriaInterface_Expecter) Page() *CriteriaInterface_Page_Call {
	return &CriteriaInterface_Page_Call{Call: _e.mock.On("Page")}
}

func (_c *CriteriaInterface_Page_Call) Run(run func()) *CriteriaInterface_Page_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *CriteriaInterface_Page_Call) Return(_a0 int) *CriteriaInterface_Page_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CriteriaInterface_Page_Call) RunAndReturn(run func() int) *CriteriaInterface_Page_Call {
	_c.Call.Return(run)
	return _c
}

// PageSize provides a mock function with given fields:
func (_m *CriteriaInterface) PageSize() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for PageSize")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// CriteriaInterface_PageSize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PageSize'
type CriteriaInterface_PageSize_Call struct {
	*mock.Call
}

// PageSize is a helper method to define mock.On call
func (_e *CriteriaInterface_Expecter) PageSize() *CriteriaInterface_PageSize_Call {
	return &CriteriaInterface_PageSize_Call{Call: _e.mock.On("PageSize")}
}

func (_c *CriteriaInterface_PageSize_Call) Run(run func()) *CriteriaInterface_PageSize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *CriteriaInterface_PageSize_Call) Return(_a0 int) *CriteriaInterface_PageSize_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CriteriaInterface_PageSize_Call) RunAndReturn(run func() int) *CriteriaInterface_PageSize_Call {
	_c.Call.Return(run)
	return _c
}

// Sort provides a mock function with given fields:
func (_m *CriteriaInterface) Sort() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Sort")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// CriteriaInterface_Sort_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Sort'
type CriteriaInterface_Sort_Call struct {
	*mock.Call
}

// Sort is a helper method to define mock.On call
func (_e *CriteriaInterface_Expecter) Sort() *CriteriaInterface_Sort_Call {
	return &CriteriaInterface_Sort_Call{Call: _e.mock.On("Sort")}
}

func (_c *CriteriaInterface_Sort_Call) Run(run func()) *CriteriaInterface_Sort_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *CriteriaInterface_Sort_Call) Return(_a0 string) *CriteriaInterface_Sort_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CriteriaInterface_Sort_Call) RunAndReturn(run func() string) *CriteriaInterface_Sort_Call {
	_c.Call.Return(run)
	return _c
}

// SortDir provides a mock function with given fields:
func (_m *CriteriaInterface) SortDir() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SortDir")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// CriteriaInterface_SortDir_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SortDir'
type CriteriaInterface_SortDir_Call struct {
	*mock.Call
}

// SortDir is a helper method to define mock.On call
func (_e *CriteriaInterface_Expecter) SortDir() *CriteriaInterface_SortDir_Call {
	return &CriteriaInterface_SortDir_Call{Call: _e.mock.On("SortDir")}
}

func (_c *CriteriaInterface_SortDir_Call) Run(run func()) *CriteriaInterface_SortDir_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *CriteriaInterface_SortDir_Call) Return(_a0 string) *CriteriaInterface_SortDir_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *CriteriaInterface_SortDir_Call) RunAndReturn(run func() string) *CriteriaInterface_SortDir_Call {
	_c.Call.Return(run)
	return _c
}

// NewCriteriaInterface creates a new instance of CriteriaInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCriteriaInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CriteriaInterface {
	mock := &CriteriaInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
